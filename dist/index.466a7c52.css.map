{"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AEVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["src/components/movie-card/movie-card.css","src/components/movie-view/movie-view.css","src/components/login-view/login-view.css","src/index.css"],"sourcesContent":[".card-img-top:hover {\r\n    cursor: pointer;\r\n    opacity: 0.92;\r\n    transition: ease 200ms;\r\n}\r\n\r\n.list-group-item {\r\n    color: grey;\r\n    font-weight: 300;\r\n    font-size: 0.8rem;\r\n}",null,"import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { MovieCard } from '../movie-card/movie-card';\r\nimport { MovieView } from '../movie-view/movie-view';\r\nimport { LoginView } from '../login-view/login-view';\r\nimport { Row, Col } from 'react-bootstrap/';\r\n\r\nexport class MainView extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n          movies: [],\r\n          selectedMovie: null,\r\n          user: null,\r\n          isRegistered: false\r\n        }\r\n      }\r\n\r\n      //Logic to be executed after loading page\r\n      componentDidMount(){\r\n        axios.get('https://my-flix-cf.herokuapp.com/movies')\r\n          .then(response => {\r\n            this.setState({\r\n              movies: response.data\r\n            });\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n          });\r\n      }\r\n \r\n      setSelectedMovie(newSelectedMovie){\r\n          this.setState({\r\n               selectedMovie: newSelectedMovie\r\n            });\r\n      }\r\n\r\n      /* When a user successfully logs in, this function updates the `user` property in state to that *particular user*/\r\n      onLoggedIn(user) {\r\n        this.setState({\r\n          user\r\n        });\r\n      }\r\n\r\n      render() {\r\n        const { movies, selectedMovie, user } = this.state;\r\n\r\n        /* If there is no user, the LoginView is rendered. If there is a user logged in, the user details are *passed as a prop to the LoginView*/\r\n        if (!user) return <LoginView onLoggedIn={user => this.onLoggedIn(user)} />;\r\n     \r\n        if (movies.length === 0) return <div className=\"main-view\" />;\r\n      \r\n        return (\r\n          <Row className=\"main-view justify-content-md-evenly m-0 p-5 align-items-center\">\r\n            {selectedMovie\r\n              ? (\r\n                // <Col md={12}>\r\n                  <MovieView movie={selectedMovie} onBackClick={newSelectedMovie => { this.setSelectedMovie(newSelectedMovie); }} />\r\n                // </Col>\r\n              )\r\n              : movies.map(movie => (\r\n                <Col md={3}>\r\n                    <MovieCard key={movie._id} movie={movie} onMovieClick={newSelectedMovie => { this.setSelectedMovie(newSelectedMovie); }}/>\r\n                </Col>\r\n              ))\r\n            }\r\n          </Row>\r\n        );\r\n      }\r\n    }","body {\r\n  background-color: whitesmoke !important;\r\n}\r\n\r\n.navbar {\r\n  background-color: rgba(161, 0, 0, 0.9);\r\n  color: white !important;\r\n  padding: 1rem !important;\r\n}\r\n\r\n.navbar-text {\r\n  margin-right: 2rem !important;\r\n  color: white !important;\r\n}\r\n\r\n.logo_navbar {\r\n  font-family: 'Bebas Neue', cursive !important;\r\n  font-size: 4rem !important;\r\n  margin-left: 2rem !important;\r\n  color: white !important;\r\n}"],"names":[],"version":3,"file":"index.466a7c52.css.map","sourceRoot":"/__parcel_source_root/"}